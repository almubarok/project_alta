// Code generated by mockery v2.33.2. DO NOT EDIT.

package mocks

import (
	grpc "google.golang.org/grpc"

	mock "github.com/stretchr/testify/mock"

	types "github.com/golangid/candi/codebase/factory/types"
)

// GRPCHandler is an autogenerated mock type for the GRPCHandler type
type GRPCHandler struct {
	mock.Mock
}

// Register provides a mock function with given fields: server, middlewareGroup
func (_m *GRPCHandler) Register(server *grpc.Server, middlewareGroup *types.MiddlewareGroup) {
	_m.Called(server, middlewareGroup)
}

// NewGRPCHandler creates a new instance of GRPCHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewGRPCHandler(t interface {
	mock.TestingT
	Cleanup(func())
}) *GRPCHandler {
	mock := &GRPCHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
