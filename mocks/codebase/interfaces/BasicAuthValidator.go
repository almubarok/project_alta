// Code generated by mockery v2.33.2. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// BasicAuthValidator is an autogenerated mock type for the BasicAuthValidator type
type BasicAuthValidator struct {
	mock.Mock
}

// ValidateBasic provides a mock function with given fields: ctx, username, password
func (_m *BasicAuthValidator) ValidateBasic(ctx context.Context, username string, password string) error {
	ret := _m.Called(ctx, username, password)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string) error); ok {
		r0 = rf(ctx, username, password)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewBasicAuthValidator creates a new instance of BasicAuthValidator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewBasicAuthValidator(t interface {
	mock.TestingT
	Cleanup(func())
}) *BasicAuthValidator {
	mock := &BasicAuthValidator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
