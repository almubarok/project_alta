// Code generated by mockery v2.33.2. DO NOT EDIT.

package mocks

import (
	candishared "github.com/golangid/candi/candishared"
	mock "github.com/stretchr/testify/mock"
)

// WorkerHandlerFunc is an autogenerated mock type for the WorkerHandlerFunc type
type WorkerHandlerFunc struct {
	mock.Mock
}

// Execute provides a mock function with given fields: ctx
func (_m *WorkerHandlerFunc) Execute(ctx *candishared.EventContext) error {
	ret := _m.Called(ctx)

	var r0 error
	if rf, ok := ret.Get(0).(func(*candishared.EventContext) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewWorkerHandlerFunc creates a new instance of WorkerHandlerFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewWorkerHandlerFunc(t interface {
	mock.TestingT
	Cleanup(func())
}) *WorkerHandlerFunc {
	mock := &WorkerHandlerFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
