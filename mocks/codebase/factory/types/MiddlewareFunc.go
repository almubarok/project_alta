// Code generated by mockery v2.33.2. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MiddlewareFunc is an autogenerated mock type for the MiddlewareFunc type
type MiddlewareFunc struct {
	mock.Mock
}

// Execute provides a mock function with given fields: _a0
func (_m *MiddlewareFunc) Execute(_a0 context.Context) (context.Context, error) {
	ret := _m.Called(_a0)

	var r0 context.Context
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context) (context.Context, error)); ok {
		return rf(_a0)
	}
	if rf, ok := ret.Get(0).(func(context.Context) context.Context); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(context.Context)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewMiddlewareFunc creates a new instance of MiddlewareFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMiddlewareFunc(t interface {
	mock.TestingT
	Cleanup(func())
}) *MiddlewareFunc {
	mock := &MiddlewareFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
