// Code generated by mockery v2.33.2. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// FilterStreamer is an autogenerated mock type for the FilterStreamer type
type FilterStreamer struct {
	mock.Mock
}

// GetLimit provides a mock function with given fields:
func (_m *FilterStreamer) GetLimit() int {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// GetPage provides a mock function with given fields:
func (_m *FilterStreamer) GetPage() int {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// IncrPage provides a mock function with given fields:
func (_m *FilterStreamer) IncrPage() {
	_m.Called()
}

// NewFilterStreamer creates a new instance of FilterStreamer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewFilterStreamer(t interface {
	mock.TestingT
	Cleanup(func())
}) *FilterStreamer {
	mock := &FilterStreamer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
